@import "var.less";

.border-radius (@radius: 5px) {
	border-radius: @radius;
	-moz-border-radius: @radius;
	-webkit-border-radius: @radius;
}

.get_center() {
	margin: 0 auto;
}

.bg_default() {
	background: center 0 no-repeat;
}

.makeButton(@w;@h;@url;@c) {
	width: @w;
	height: @h;
	.border-radius();
	cursor: pointer;
	background: @url center no-repeat @c;
}

.makeTriangle(down,@w,@color) {
	width: 0px;
	height: 0px;
	display: block;
	border-style: solid;
	border-width: @w;
	border-color: transparent transparent @color transparent;
}

.makeTriangle(right,@w,@color) {
	width: 0px;
	height: 0px;
	display: block;
	border-style: solid;
	border-width: @w;
	border-color: transparent @color transparent transparent;
}

.makeTriangle(left,@w,@color) {
	width: 0px;
	height: 0px;
	display: block;
	border-style: solid;
	border-width: @w;
	border-color: transparent transparent transparent @color;
}

.makeTriangle(up,@w,@color) {
	width: 0px;
	height: 0px;
	display: block;
	border-style: solid;
	border-width: @w;
	border-color: @color transparent transparent transparent;
}

.makeTriangle(nc,@w) {
	width: 0px;
	height: 0px;
	border-style: solid;
	border-width: @w;
}

.onePxBorder(@color:@bordercolor) {
	border: 1px solid @color;
}

.loopLiColor(@index,@colordiff) when (@index>0) {
	li:nth-child(@{index}) {
		background-color: #ffffff - @colordiff*(@index);
	}
	.loopLiColor(@index - 1, @colordiff);
}

.loopLiColor(0) {
}

.menu(@menu-width: 100px,@height:50px,@li-height: 30px,@menu-bg:#ffffff,@menu-c:#ffffff,@menu-hoverc:#ffffff,@li-c:#000,@li-hoverbg:#fff,@li-hoverc:#000) {
	.menu {
		position: relative;
		float: left;
		width: @menu-width;
		height: @height;
		line-height: @height;
		background-color: @menu-bg;
		color: @menu-c;
		cursor: pointer;
		text-align: center;
		&:hover {
			background-color: @menu-hoverc;
		}
		.showClick {
			width: 100%;
			height: 100%;
			display: block;
		}
		ul {
			position: absolute;
			width: @menu-width;
			top: @height;
			display: none;
			left: 0;
			background-color: #fff;
			padding: 0;
			margin: 0;
			border: 1px @bordercolor solid;

		}
		li {
			//			display: none;
			text-align: center;
			height: @li-height;
			width: @menu-width;
			line-height: @li-height;
			color: @li-c;
			border-bottom: 1px @bordercolor solid;
			&:hover {
				background-color: @li-hoverbg;
				color: @li-hoverc;
			}
		}
	}
}
.border-box(){
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
}
//flex

.flexbox() {
	display: -webkit-box;
	display: -webkit-flex;
	display: flex;
}

.flex(@values) {
	-webkit-box-flex: @values;
	-webkit-flex: @values;
	flex: @values;
}

//改变轴的方向
.flex-direction-down() {
	-webkit-box-orient: vertical;
	-webkit-flex-direction: column;
	flex-direction: column;
}


.order(@val) {
	-webkit-box-ordinal-group: @val;
	-webkit-order: @val;
	order: @val;
}
//主轴空间利用
.flex-justify-content-start(){
	-webkit-box-pack:start;
	-webkit-justify-content: flex-start;
	justify-content: flex-start;
}
.flex-justify-content-end(){
	-webkit-box-pack:end;
	-webkit-justify-content: flex-end;
	justify-content: flex-end;
}
.flex-justify-content-center(){
	-webkit-box-pack:center;
	-webkit-justify-content: center;
	justify-content: center;
}
.flex-justify-content-space-between(){
	-webkit-box-pack:justify;
	-webkit-justify-content: space-between;
	justify-content: space-between;
}
//还有一个around没用过
//侧轴空间利用
.flex-align-center() {
	-webkit-box-align: center;
	-webkit-align-items: center;
	align-items: center;
}
.flex-align-center() {
	-webkit-box-align: center;
	-webkit-align-items: center;
	align-items: center;
}


//iteration-count:infinite 无限
.animate(@name,@duration:0.7s,@iteration-count:infinite,@delay:0s,@fill-mode:forwards,@timeFunction:ease) {
	-webkit-animation-name: @name;
	-webkit-animation-duration: @duration;
	-webkit-animation-iteration-count: @iteration-count;
	-webkit-animation-delay: @delay;
	-webkit-animation-fill-mode: @fill-mode;
	-webkit-animation-timing-function: @timeFunction;
	animation-name: @name;
	animation-duration: @duration;
	animation-iteration-count: @iteration-count;
	animation-delay: @delay;
	animation-fill-mode: @fill-mode;
	animation-timing-function: @timeFunction;
}

.perspective(@d:500px) {
	-webkit-perspective: @d;
	-moz-perspective: @d;
	perspective: @d;
}

.transform-style(@type:preserve-3d) {
	-webkit-transform-style: @type;
	-moz-transform-style: @type;
	-ms-transform-style: @type;
	transform-style: @type;
}

.transition(@duration:1s,@property:all,@timing:ease,@delay:0) {
	-webkit-transition: @property @duration @timing @delay;
	-moz-transition: @property @duration @timing @delay;
	-o-transition: @property @duration @timing @delay;
	transition: @property @duration @timing @delay;
}

.transform(@args) {
	-webkit-transform: @args;
	transform: @args;
}
.origin2D(@x, @y){
	-webkit-transform-origin:@x @y;
	transform-origin:@x @y;
}
.rotate(@deg) {
	-webkit-transform: rotate(@deg);
	transform: rotate(@deg);
}

.rotateX(@deg) {
	-webkit-transform: rotateX(@deg);
	transform: rotateX(@deg);
}

.rotateY(@deg) {
	-webkit-transform: rotateY(@deg);
	transform: rotateY(@deg);
}

.rotateZ(@deg) {
	-webkit-transform: rotateZ(@deg);
	transform: rotateZ(@deg);
}

.skew(@x,@y) {
	-webkit-transform: skew(@x,@y);
	transform: skew(@x,@y);
}

.scaleZ(@per) {
	-webkit-transform: scaleZ(@x,@y);
	transform: scaleZ(@x,@y);
}
.pSpeed(){
	-webkit-transform:transition3d(0,0,0);
}